import pygame
import random

# Initialize pygame
pygame.init()

# Screen dimensions
SCREEN_WIDTH = 800
SCREEN_HEIGHT = 600
BOARD_COLOR = (185, 122, 87)
WHITE = (255, 255, 255)
BLACK = (0, 0, 0)

# Piece dimensions
PIECE_RADIUS = 20

# Create the screen
screen = pygame.display.set_mode((SCREEN_WIDTH, SCREEN_HEIGHT))
pygame.display.set_caption("Backgammon")

# Load board image (optional, you can draw your own)
# board_image = pygame.image.load("backgammon_board.png")
# board_rect = board_image.get_rect(center=(SCREEN_WIDTH // 2, SCREEN_HEIGHT // 2))

# Draw the board
def draw_board():
    screen.fill(BOARD_COLOR)
    for i in range(12):
        pygame.draw.polygon(screen, WHITE if i % 2 == 0 else BLACK, [
            (SCREEN_WIDTH / 12 * i, 0),
            (SCREEN_WIDTH / 12 * (i + 1), 0),
            (SCREEN_WIDTH / 12 * (i + 1) - (SCREEN_WIDTH / 24), SCREEN_HEIGHT / 2),
            (SCREEN_WIDTH / 12 * i + (SCREEN_WIDTH / 24), SCREEN_HEIGHT / 2)
        ])
        pygame.draw.polygon(screen, WHITE if i % 2 == 0 else BLACK, [
            (SCREEN_WIDTH / 12 * i, SCREEN_HEIGHT),
            (SCREEN_WIDTH / 12 * (i + 1), SCREEN_HEIGHT),
            (SCREEN_WIDTH / 12 * (i + 1) - (SCREEN_WIDTH / 24), SCREEN_HEIGHT / 2),
            (SCREEN_WIDTH / 12 * i + (SCREEN_WIDTH / 24), SCREEN_HEIGHT / 2)
        ])

# Draw pieces
def draw_pieces(pieces):
    for color, positions in pieces.items():
        for position in positions:
            pygame.draw.circle(screen, WHITE if color == 'white' else BLACK, position, PIECE_RADIUS)

# Roll dice
def roll_dice():
    return random.randint(1, 6), random.randint(1, 6)

# Move piece
def move_piece(pieces, from_pos, to_pos):
    for color, positions in pieces.items():
        if from_pos in positions:
            positions.remove(from_pos)
            positions.append(to_pos)
            break

# Initial piece positions (simplified)
pieces = {
    'white': [(50, 50), (50, 100), (50, 150), (750, 50), (750, 100), (750, 150)],
    'black': [(50, 450), (50, 500), (50, 550), (750, 450), (750, 500), (750, 550)]
}

# Game loop
running = True
while running:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
        elif event.type == pygame.MOUSEBUTTONDOWN:
            pos = pygame.mouse.get_pos()
            # Handle piece selection and movement here
            # For simplicity, this is not implemented in detail

    # Draw everything
    draw_board()
    draw_pieces(pieces)

    pygame.display.flip()

    # Simulate a dice roll (for demonstration)
    dice = roll_dice()
    print(f"Dice roll: {dice}")

    # Limit frame rate
    pygame.time.delay(1000)  # 1 second delay for demo purposes

pygame.quit()
